from loader import dp, bot, html, db
from aiogram.types import Message, CallbackQuery
from src.keyboards.inline import payment, select_payment
from config import YOOMONEY_TOKEN, FIREME_TOKEN, YOOMONEY_WALLET
from yoomoney import Quickpay, Client
import requests
import random
import uuid
import asyncio


async def load_pay(call: CallbackQuery):
    msg= await call.message.edit_text("üôèüèª –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...\n\n–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è 5-20 —Å–µ–∫.")
    await asyncio.sleep(2)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id= msg.message_id, text= "üôèüèª –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...\n\n10%\nüü©‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è 5-20 —Å–µ–∫.")
    await asyncio.sleep(2)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=msg.message_id, text="üôèüèª –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...\n\n27%\nüü©üü©üü©‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è 5-20 —Å–µ–∫.")
    await asyncio.sleep(2)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=msg.message_id, text="üôèüèª –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...\n\n50%\nüü©üü©üü©üü©üü©‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è 5-20 —Å–µ–∫.")
    await asyncio.sleep(3)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=msg.message_id, text="üôèüèª –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...\n\n79%\nüü©üü©üü©üü©üü©üü©‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è‚¨úÔ∏è\n–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è 5-20 —Å–µ–∫.")
    await asyncio.sleep(3)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=msg.message_id, text="üôèüèª –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...\n\n98%\nüü©üü©üü©üü©üü©üü©üü©üü©üü©‚¨úÔ∏è\n–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è 5-20 —Å–µ–∫.")
    await asyncio.sleep(1)
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=msg.message_id, text="‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞!")

async def first_step(call: CallbackQuery):
    await load_pay(call)
    await call.message.answer("‚úÖ–í–∞—à –∞—Ä—Ö–∏–≤: https://mega.nz/#P!AgBsSHcQElrp5NwRHsPvrYzurTh2MZJo7i4QxGteAV4whHAAC5EtORADqoyrGwia6w1R6EKPxGgP03olXradbZxzK4EoRu-Wwd39y1y6CaZ2jWtA03kr2A\n\n"
                                +f"‚ùå–ê—Ä—Ö–∏–≤ –∑–∞–ø–æ—Ä–æ–ª–µ–Ω. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å 399 RUB.\n\n" 
                                +f"üòé–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞—Ä—Ö–∏–≤–∞ –ø—Ä—è–º–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–ù–µ –Ω—É–∂–Ω–æ —Å–∫–∞—á–∏–≤–∞—Ç—å –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä)"
                                +f"‚è≥–î–∞—Ç–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –≤–∏–¥–µ–æ —É–∫–∞–∑–∞–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤.",
                                reply_markup=select_payment(price=399, step=2))

async def second_step(call: CallbackQuery):
    await call.message.edit_text("‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –±—ã–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    await call.message.answer(f"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞—Ä—Ö–∏–≤—É –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º, –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –∞—Ä–µ–Ω–¥—É —Ö–æ—Å—Ç–∏–Ω–≥–∞ üëá\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂¬ª, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞",
                                reply_markup=select_payment(price=479, step=3))
    
async def third_step(call: CallbackQuery):
    await call.message.edit_text("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\n"
                                +f"https://mega.nz/#P!AgBsSHcQEloA9d91HZD2OPFAAoEnMe0knBm1LeocT1pCpJFhdGJiQMXVt5gcgb6pndBdmphI-ZB8gORSq-i4yxD-WmCCVgVSvY7IDqL0yBIkTH4c3rqLhg",
                                disable_web_page_preview=True)
    await asyncio.sleep(5)
    await call.message.answer("‚ö†Ô∏è –£–ø—Å, –ø–æ—Ö–æ–∂–µ, –±–æ—Ç –ø–æ—Å—Ç–∞–≤–∏–ª –ø–∞—Ä–æ–ª—å –Ω–∞ –∞—Ä—Ö–∏–≤, —Ç–∞–∫ –∫–∞–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –æ–±–Ω–∞—Ä—É–∂–∏–ª–∞ –∏–Ω—Ç–∏–º–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.\n\n"
                                +f"üîê –ù–µ –ø—É–≥–∞–π—Ç–µ—Å—å, —ç—Ç–æ –±–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –≥–ª–∞–∑. –ú—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å.\n\n"
                                +f"–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∞—Ä—Ö–∏–≤, –Ω—É–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∫–ª—é—á üëá",
                                reply_markup=select_payment(price=579, step=4))

async def forth_step(call: CallbackQuery):
    await call.message.edit_text("‚ùå –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")
    await call.message.answer(f"‚ö†Ô∏è –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –ø–µ—Ä–µ–≤–æ–¥ –±—ã–ª –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω —Å–ª—É–∂–±–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.\n\n"
                            +f"–ü—Ä–∏–Ω–æ—Å–∏–º –∏—Å–∫—Ä–µ–Ω–Ω–∏–µ –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞‚Ä¶\n\n"
                            +f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",
                            reply_markup=select_payment(price=579, step=5))
    
async def fiveth_step(call: CallbackQuery):
    await call.message.edit_text("‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∞!")
    await call.message.answer(f"üí≥ –¢–∞–∫ –∫–∞–∫ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º, –ø—Ä–æ—Å–∏–º –≤–∞—Å –æ–ø–ª–∞—Ç–∏—Ç—å –∫–ª—é—á –µ—â–µ —Ä–∞–∑.\n\n"
                                +f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º—ã, —Ç–æ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –æ–Ω–∏ –±—É–¥—É—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∑–∞ –Ω–∞—à —Å—á–µ—Ç.\n\n",
                                 reply_markup=select_payment(price=579, step=6))
    
async def sixth_step(call: CallbackQuery):
    await call.message.edit_text("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\nüëâüèª –ö–õ–Æ–ß –ö –ê–†–•–ò–í–£: Ttuwei881")
    await asyncio.sleep(4)
    await call.message.answer("ü§´–ù–∞—à–∞ –ø–æ–∏—Å–∫–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–∞–∫–∂–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª–∞:\n\n"
                                    +f"2 –ê–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∞–π—Ç–∞—Ö —Å —É—Å–ª—É–≥–∞–º–∏ —ç—Å–∫–æ—Ä—Ç–∞\n"
                                    +f"1 –ê–∫–∫–∞—É–Ω—Ç –Ω–∞ —Å–∞–π—Ç–µ —Å –í–µ–±–ö–∞–º –º–æ–¥–µ–ª—è–º–∏\n\n"
                                    +f"üîë –î–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–µ—Å–∏—Ç–µ –æ–ø–ª–∞—Ç—É",
                                    reply_markup=select_payment(price=990, step=7))

async def seventh_step(call: CallbackQuery):
    await call.message.edit_text("‚úÖ –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä")
    await call.message.answer(f"ü§ñ –ü–æ—Å–ª–µ —ç—Ç–æ–π –æ–ø–ª–∞—Ç—ã –≤–∞–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤—Å—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                            reply_markup=select_payment(price=990, step=8))
    
async def eighth_step(call: CallbackQuery):
    await call.message.edit_text("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
    await call.message.answer(f"üåê –°—Å—ã–ª–∫–∏ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
                            +f"https://hopesex.com/model/leona-5\n"
                            +f"https://datehotsexgirls.com/model/leona-5\n"
                            +f"https://rt.bongacams.xxx/Polinochka969")

def get_url_link_kassa(amount, bill_id, type):
    url = "https://admin.vanilapay.com/api/v1/deposit"

    querystring = {"order_id": bill_id,
                   "amount":amount,
                   "type": type,
                   "token":FIREME_TOKEN}

    headers = {"Content-Type": "application/json"}
    
    try:
        response = requests.request("GET", url, headers=headers, params=querystring)
        return response.json()['url']
    except:
        return None

def check_bill_kassa(bill_id):
    querystring = {"order_id":bill_id,
                   "token":FIREME_TOKEN}

    headers = {"Content-Type": "application/json"}
    
    url="https://admin.vanilapay.com/api/v1/transaction"
    
    try:
        response= requests.request("GET", url, headers=headers, params=querystring)
        print(response.status_code)
        print(response.json())
        return response.json()['status']
    except:
        return None

@dp.callback_query_handler(text_contains='tariff')
async def first_step_pay(call: CallbackQuery):
    price= int(call.data.split('_')[1])
    await call.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá',
                              reply_markup=select_payment(price, 1))

@dp.callback_query_handler(text_contains='select')
async def choice_payments(call: CallbackQuery):
    price= call.data.split('_')[3]
    step= call.data.split('_')[1]
    if call.data.split('_')[2] == 'card':
        bill_ID = f"{call.message.chat.id}{random.randint(1000, 10000)}"
        print(bill_ID)
        url = get_url_link_kassa(
            amount=price,
            bill_id=bill_ID,
            type='invoice-card'
        )
        await call.message.edit_text(text="üìç <b>–°—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–æ—Ç–æ–≤</b> üìç\n\n"
                                  +f"<i>–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üí≥\n\n"
                                  +f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂¬ª, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞</i>",
                                  reply_markup=payment(price=price,
                                                       step=step,
                                                       bill_id=bill_ID + '!qiwi',
                                                       url=url),
                                  parse_mode=html)    
    if call.data.split('_')[2] == 'qiwi':
        bill_ID = f"{call.message.chat.id}{random.randint(1000, 10000)}"
        print(bill_ID)  
        url = get_url_link_kassa(
            amount=price,
            bill_id=bill_ID,
            type='invoice-qw'
        )
        await call.message.edit_text(text="üìç <b>–°—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–æ—Ç–æ–≤</b> üìç\n\n"
                                  +f"<i>–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üí≥\n\n"
                                  +f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂¬ª, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞</i>",
                                  reply_markup=payment(price=price,
                                                       step=step,
                                                       bill_id=bill_ID + '!qiwi',
                                                       url=url),
                                  parse_mode=html)
    if call.data.split('_')[2] == 'ymoney':
        bill_ID = str(uuid.uuid4())+ '!yoomoney'
        bill = Quickpay(
        receiver=YOOMONEY_WALLET,
        quickpay_form='shop',
        targets='Photo bot',
        paymentType='SB',
        sum=10,
        label=bill_ID)
        await call.message.edit_text(text="üìç <b>–°—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–æ—Ç–æ–≤</b> üìç\n\n"
                                  +f"<i>–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üí≥\n\n"
                                  +f"–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂¬ª, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞</i>",
                                  reply_markup=payment(price=price,
                                                       step=step,
                                                       bill_id=bill_ID,
                                                       url=bill.redirected_url),
                                  parse_mode=html)
    
@dp.callback_query_handler(text_contains='back')
async def back(call: CallbackQuery):
    price= call.data.split('_')[1]
    step= call.data.split('_')[2]
    await call.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã üëá',
                              reply_markup=select_payment(price, step))

@dp.callback_query_handler(text_contains='check_bill')
async def cancel(call: CallbackQuery):
    await asyncio.sleep(2)
    bill_id = call.data.split('_')[1][4:]
    print(bill_id.split('!')[0])
    try:
        if bill_id.split('!')[1] == 'qiwi':
            result= check_bill_kassa(bill_id.split('!')[0])
        elif bill_id.split('!')[1] == 'yoomoney':
            client = Client(YOOMONEY_TOKEN)
            history = client.operation_history(label=bill_id)
            result= history.operations[-1].status
        print(result)
        if result== 'PAID' or result == 'success' or result == 'paid':
            try:
                db.edit_status(call.message.chat.id)
            except:
                pass
            if call.data.split('_')[2] == '1':
                await first_step(call)
            elif call.data.split('_')[2] == '2':
                await second_step(call)
            elif call.data.split('_')[2] == '3':
                await third_step(call)
            elif call.data.split('_')[2] == '4':
                await forth_step(call)
            elif call.data.split('_')[2] == '5':
                await fiveth_step(call)
            elif call.data.split('_')[2] == '6':
                await sixth_step(call)
            elif call.data.split('_')[2] == '7':
                await seventh_step(call)
            elif call.data.split('_')[2] == '8':
                await eighth_step(call)
        else:
            pass
    except Exception as ex:
        print(ex)